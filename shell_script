１　在文本中直接写ｓｈｅｌｌ命令　　修改文件可执行，可以 " ./ " 执行文件中的命令　　
   添加环境变量文件所在的路径　　可以直接运行
2 变量赋值不能加空格
３　$0  与键入的命令行参数一样，包含脚本文件名
    $1 $2 ....$9  分别包含第一个到第９个命令行参数
    $# 包含命令行参数的个数（文件名）
    $@ 包含所有命令行参数“$1.....$9”
    $? 包含前一个参数的退出状态
    $* 包含所有命令行参数“$1.....$9”（参数大于１０时　使用｛$10｝）
    $$ 正在执行的进程ＩＤ号
    
 export   PATH=$PATH:/home/zm

4 　# 注释
５　常用功能性语句
    read var1 var2 var3  把第一个输入的给ｖａｒ１ 第二给var2。。。。
  
6   整数测试　　　
#!/bin/bash

answer="yes"
test "$answer"="yes"
echo $?   #上一个命令的执行结果

a=3
b=5
test $a -eq $b
echo $?
test $a -le $b
test $?

test　运算符
    -eq  =
    -ne !=
    -gt >
    -ge >=
    -lt <
    -le <=
    
 文件测试
 -d 目录
 -e 是否存在
 －Ｌ是否为链接符号
 -f　普通文件
 -r 可读
 －ｗ　可写
 －ｘ　　可执行
 －ｓ　长度不为０

-  条件语句:
   if ...then ...fi
   if 表达式
            then ...
   fi
   
   if ...then..else...fi
   
   if.... elif...fi
   
   
   case $1  in
      file1 | file3 | file4)
         echo "   "
            ;;
      file2)
         echo "  "
            ;;
      *)
         echo "  "
   esac
   
   if [ $s -lt 0 -o $s -gt 100]  #小于０或者大于１００
  
  
  for循环： 
   for  var in list
      do 
            .....
      done
     
 while ...(true)
   do 
      ...
   done
   
   break continue
 函数  
   function_name   arg1 arg2 ....
   echo $?
 value_name='function_name arg1 arg2 ....'
 
